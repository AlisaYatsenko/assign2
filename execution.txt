-> Sort: AvgResistantPrice DESC  (actual time=76.1..76.1 rows=15 loops=1)
    -> Filter: (TotalProducts > 5)  (actual time=76..76 rows=15 loops=1)
        -> Table scan on <temporary>  (actual time=76..76 rows=15 loops=1)
            -> Aggregate using temporary table  (actual time=76..76 rows=15 loops=1)
                -> Nested loop inner join  (cost=5866 rows=5860) (actual time=0.405..49 rows=13605 loops=1)
                    -> Filter: ((c.CategoryName like '%e%') and (c.CategoryID is not null))  (cost=2.25 rows=2.22) (actual time=0.0291..0.205 rows=15 loops=1)
                        -> Table scan on c  (cost=2.25 rows=20) (actual time=0.0259..0.139 rows=20 loops=1)
                    -> Index lookup on p using idx_products1 (CategoryID=c.CategoryID), with index condition: ((p.ModifyDate >= '2024-01-01') and (p.ModifyDate <= '2024-12-31'))  (cost=278 rows=2637) (actual time=0.354..3.19 rows=907 loops=15)
